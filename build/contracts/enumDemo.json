{
  "contractName": "enumDemo",
  "abi": [
    {
      "inputs": [],
      "name": "u1",
      "outputs": [
        {
          "internalType": "enum enumDemo.user",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ban",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"allow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ban\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"u1\",\"outputs\":[{\"internalType\":\"enum enumDemo.user\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/enumDemo.sol\":\"enumDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/enumDemo.sol\":{\"keccak256\":\"0xc2c419070be2cd80cb32837eb456d45862ff9d6bc9a6ebd9cd9b7804759ddd6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f329f502b86fa343ba9a1795c67cd6f64803a0d48108ffa5f54dd55a942404c\",\"dweb:/ipfs/QmcmKN4aM3q3zgPKdgT9V1uqEdZEoDpBT51fqDkHifesb3\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000806101000a81548160ff0219169083600281111561002957610028610040565b5b021790555034801561003a57600080fd5b5061006f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6101a98061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631aa3561014610046578063b1b3d3f614610064578063d5d9ce911461006e575b600080fd5b61004e610078565b60405161005b9190610158565b60405180910390f35b61006c610089565b005b6100766100b5565b005b60008054906101000a900460ff1681565b60008060006101000a81548160ff021916908360028111156100ae576100ad6100e1565b5b0217905550565b60016000806101000a81548160ff021916908360028111156100da576100d96100e1565b5b0217905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610121576101206100e1565b5b50565b600081905061013282610110565b919050565b600061014282610124565b9050919050565b61015281610137565b82525050565b600060208201905061016d6000830184610149565b9291505056fea264697066735822122008f68b7757c7efe34a334b1436b2e4ba3ba78f9119b8519cf5e0e19e53a7fe7364736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80631aa3561014610046578063b1b3d3f614610064578063d5d9ce911461006e575b600080fd5b61004e610078565b60405161005b9190610158565b60405180910390f35b61006c610089565b005b6100766100b5565b005b60008054906101000a900460ff1681565b60008060006101000a81548160ff021916908360028111156100ae576100ad6100e1565b5b0217905550565b60016000806101000a81548160ff021916908360028111156100da576100d96100e1565b5b0217905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610121576101206100e1565b5b50565b600081905061013282610110565b919050565b600061014282610124565b9050919050565b61015281610137565b82525050565b600060208201905061016d6000830184610149565b9291505056fea264697066735822122008f68b7757c7efe34a334b1436b2e4ba3ba78f9119b8519cf5e0e19e53a7fe7364736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:1"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:946:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "242:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "276:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "278:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "278:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "278:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "265:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "272:1:1",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "262:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "262:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "255:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "255:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "252:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_user_$5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:1",
                "type": ""
              }
            ],
            "src": "193:111:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "361:72:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "371:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "382:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "371:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "421:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_user_$5",
                      "nodeType": "YulIdentifier",
                      "src": "388:32:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "388:39:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "388:39:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_user_$5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "343:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "353:7:1",
                "type": ""
              }
            ],
            "src": "310:123:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:59:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "513:43:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_user_$5",
                      "nodeType": "YulIdentifier",
                      "src": "526:23:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:30:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "513:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_user_$5_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "483:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "493:9:1",
                "type": ""
              }
            ],
            "src": "439:123:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "637:70:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "654:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "694:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_user_$5_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "659:34:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:41:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "647:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "647:54:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "647:54:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_user_$5_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "625:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "632:3:1",
                "type": ""
              }
            ],
            "src": "568:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "815:128:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "825:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "837:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "848:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "833:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "825:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "909:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "933:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "918:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "918:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_user_$5_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "861:47:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:75:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:75:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_user_$5__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "787:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "799:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "810:4:1",
                "type": ""
              }
            ],
            "src": "713:230:1"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_user_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_user_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_user_$5(value)\n    }\n\n    function convert_t_enum$_user_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_user_$5(value)\n    }\n\n    function abi_encode_t_enum$_user_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_user_$5_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_user_$5__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_user_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "66:235:0:-:0;;;170:8;153:25;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;66:235;;;;;;;;;;;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;66:235:0;;;;;;;",
  "deployedSourceMap": "66:235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:56;;;:::i;:::-;;247:52;;;:::i;:::-;;153:25;;;;;;;;;;;;:::o;185:56::-;224:10;219:2;;:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;185:56::o;247:52::-;284:8;279:2;;:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;247:52::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:111;272:1;265:5;262:12;252:46;;278:18;;:::i;:::-;252:46;193:111;:::o;310:123::-;353:7;382:5;371:16;;388:39;421:5;388:39;:::i;:::-;310:123;;;:::o;439:::-;493:9;526:30;550:5;526:30;:::i;:::-;513:43;;439:123;;;:::o;568:139::-;659:41;694:5;659:41;:::i;:::-;654:3;647:54;568:139;;:::o;713:230::-;810:4;848:2;837:9;833:18;825:26;;861:75;933:1;922:9;918:17;909:6;861:75;:::i;:::-;713:230;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract enumDemo {\n    enum user {\n        allow,\n        ban,\n        wait\n    }\n    user public u1 = user.ban;\n\n    function allow() public {\n        u1 = user.allow;\n    }\n\n    function ban() public {\n        u1 = user.ban;\n    }\n}\n",
  "sourcePath": "/media/hardik/Stuff/PlayGround/Solidity_PlayGround/contracts/enumDemo.sol",
  "ast": {
    "absolutePath": "project:/contracts/enumDemo.sol",
    "exportedSymbols": {
      "enumDemo": [
        29
      ]
    },
    "id": 30,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "enumDemo",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29
        ],
        "name": "enumDemo",
        "nameLocation": "75:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "enumDemo.user",
            "id": 5,
            "members": [
              {
                "id": 2,
                "name": "allow",
                "nameLocation": "110:5:0",
                "nodeType": "EnumValue",
                "src": "110:5:0"
              },
              {
                "id": 3,
                "name": "ban",
                "nameLocation": "125:3:0",
                "nodeType": "EnumValue",
                "src": "125:3:0"
              },
              {
                "id": 4,
                "name": "wait",
                "nameLocation": "138:4:0",
                "nodeType": "EnumValue",
                "src": "138:4:0"
              }
            ],
            "name": "user",
            "nameLocation": "95:4:0",
            "nodeType": "EnumDefinition",
            "src": "90:58:0"
          },
          {
            "constant": false,
            "functionSelector": "1aa35610",
            "id": 10,
            "mutability": "mutable",
            "name": "u1",
            "nameLocation": "165:2:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "153:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_user_$5",
              "typeString": "enum enumDemo.user"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "user",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5,
                "src": "153:4:0"
              },
              "referencedDeclaration": 5,
              "src": "153:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_user_$5",
                "typeString": "enum enumDemo.user"
              }
            },
            "value": {
              "expression": {
                "id": 8,
                "name": "user",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5,
                "src": "170:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_user_$5_$",
                  "typeString": "type(enum enumDemo.user)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "ban",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 3,
              "src": "170:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_user_$5",
                "typeString": "enum enumDemo.user"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "209:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13,
                      "name": "u1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "219:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_user_$5",
                        "typeString": "enum enumDemo.user"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "224:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_user_$5_$",
                          "typeString": "type(enum enumDemo.user)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "allow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2,
                      "src": "224:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_user_$5",
                        "typeString": "enum enumDemo.user"
                      }
                    },
                    "src": "219:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_user_$5",
                      "typeString": "enum enumDemo.user"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "219:15:0"
                }
              ]
            },
            "functionSelector": "b1b3d3f6",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allow",
            "nameLocation": "194:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:2:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:0"
            },
            "scope": 29,
            "src": "185:56:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "269:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "u1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "279:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_user_$5",
                        "typeString": "enum enumDemo.user"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "284:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_user_$5_$",
                          "typeString": "type(enum enumDemo.user)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ban",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "284:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_user_$5",
                        "typeString": "enum enumDemo.user"
                      }
                    },
                    "src": "279:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_user_$5",
                      "typeString": "enum enumDemo.user"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "279:13:0"
                }
              ]
            },
            "functionSelector": "d5d9ce91",
            "id": 28,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ban",
            "nameLocation": "256:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:0"
            },
            "scope": 29,
            "src": "247:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "66:235:0",
        "usedErrors": []
      }
    ],
    "src": "32:270:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-02T03:33:13.778Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}